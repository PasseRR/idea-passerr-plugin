<?xml version="1.0" encoding="utf-8" ?>
<idea-plugin>
    <id>com.github.passerr.idea.plugins</id>
    <name>PasseRR Idea Tools</name>
    <vendor email="xie__hai@sina.com" url="https://gitee.com/PasseRR/idea-passerr-plugin">
        PasseRR
    </vendor>

    <description><![CDATA[
      <p>EN
      <ul>
        <li>Switch easily between kebab-case, SNAKE_CASE, PascalCase, camelCase, snake_case.</li>
        <li>Copy <a href="https://mybatis.org/mybatis-3/">mybatis</a> log as executable sql, through console menu or common tools.</li>
        <li>Some common tools for developer, like url encoder/decoder, md5, json format, mybatis log converter.</li>
        <li>Copy <a href="https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/mvc.html">springmvc</a> controller method full http path</li>
        <li>Easily copy <a href="https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/mvc.html">springmvc</a> controller method as api document, custom api template</li>
        <li>Copy java method return type as <a href="https://json5.org/">json5</a></li>
      </ul>
      <p>CN
      <ul>
        <li>变量命名切换在kebab-case, SNAKE_CASE, PascalCase, camelCase, snake_case之间切换</li>
        <li>mybatis日志转可执行sql，可以通过console菜单或者工具window</li>
        <li>一些常用的开发工具，如url编码/解码、md5加密、json格式化、mybatis日志转换</li>
        <li>springmvc controller方法http全路径复制</li>
        <li>复制springmvc controller方法为api文档，可以自定义api文档模版</li>
        <li>复制java方法返回类型为json5</li>
      </ul>
      ]]></description>

    <change-notes>
        <![CDATA[
        <p>2.0.2:
          <ul>
            <li>compatibility settings handle</li>
          </ul>
        <p>2.0.1:
          <ul> 
            <li>version2.0.0 bug fix</li>
          </ul>
         <p>2.0.0:
          <ul>
            <li>spring controller path copy</li>
            <li>spring controller convert to api document</li>
            <li>return type copy as json5</li>
          </ul>
          <p>1.1.0:
          <ul>
            <li>differential input/output textarea</li>
            <li>replace radio with combobox</li>
            <li>add some en/decode utils</li>
            <li>add some en/decryption utils</li>
          </ul>
          <p>1.0.3:
          <ul>
            <li>Fixed mybatis null value bug</li>
          </ul>
          <p>1.0.2:
          <ul>
            <li>Add mybatis log convert to executable sql</li>
            <li>Copy log as executable sql in console</li>
          </ul>
          <p>1.0.1:
          <ul>
            <li>Fixed json format can not format array</li>
            <li>position first row when successfully format</li>
            <li>position error row when unsuccessfully format</li>
          </ul>
          </p>
          <p>1.0.0:
          <ul>
            <li>Add Camel Case Plugin</li>
            <li>Add Json Format Plugin</li>
          </ul>
          </p>
      ]]>
    </change-notes>

    <idea-version since-build="173.4"/>

    <depends>com.intellij.modules.lang</depends>
    <depends>com.intellij.modules.java</depends>

    <application-components/>

    <project-components/>

    <actions>
        <action id="com.github.passerr.idea.plugins.camel.ToggleCamelCase"
                class="com.github.passerr.idea.plugins.camel.ToggleCamelCase"
                text="Toggle Camel Case"
                description="Switches between CamelCase, camelCase, snake_case and SNAKE_CASE">
            <add-to-group group-id="EditSmartGroup" anchor="after" relative-to-action="EditorToggleCase"/>
            <keyboard-shortcut keymap="$default" first-keystroke="shift alt u"/>
        </action>

        <action id="com.github.passerr.idea.plugins.mybatis.MybatisLog2SqlAction"
                class="com.github.passerr.idea.plugins.mybatis.MybatisLog2SqlAction"
                text="Copy As Executable Sql"
                description="Convert log to executable sql">
            <add-to-group group-id="ConsoleEditorPopupMenu" anchor="before" relative-to-action="ConsoleView.ClearAll"/>
        </action>

        <action id="com.github.passerr.idea.plugins.spring.web.CopyReturnTypeAction"
                class="com.github.passerr.idea.plugins.spring.web.CopyReturnTypeAction"
                text="Copy Method Return Type Json5">
            <add-to-group group-id="EditorPopupMenu" anchor="after" relative-to-action="$Paste"/>
        </action>
        <action id="com.github.passerr.idea.plugins.spring.web.CopyMethodPathAction"
                class="com.github.passerr.idea.plugins.spring.web.CopyMethodPathAction"
                text="Copy Method Rest Path">
            <add-to-group group-id="EditorPopupMenu" anchor="after"
                          relative-to-action="com.github.passerr.idea.plugins.spring.web.CopyReturnTypeAction"/>
        </action>
        <action id="com.github.passerr.idea.plugins.spring.web.CopyMethodApiDocAction"
                class="com.github.passerr.idea.plugins.spring.web.CopyMethodApiDocAction"
                text="Copy Method Api Doc">
            <add-to-group group-id="EditorPopupMenu" anchor="after"
                          relative-to-action="com.github.passerr.idea.plugins.spring.web.CopyMethodPathAction"/>
        </action>
    </actions>

    <extensions defaultExtensionNs="com.intellij">
        <toolWindow id="PTools" anchor="right" icon="/icon/icon.svg"
                    factoryClass="com.github.passerr.idea.plugins.tool.TextHandlerToolWindow"/>
        <applicationService serviceImplementation="com.github.passerr.idea.plugins.spring.web.ApiDocStateComponent"/>
        <applicationConfigurable instance="com.github.passerr.idea.plugins.spring.web.ApiDocConfigurable"/>
    </extensions>
</idea-plugin>